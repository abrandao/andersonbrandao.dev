version: '3.4'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - database
    container_name: rails
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - gem_cache:/usr/local/bundle/gems
      - node_modules:/app/node_modules
    env_file: .env
    environment:
      RAILS_ENV: development
    restart: unless-stopped
    networks:
      - app-network

  database:
    image: postgres:12.3-alpine
    restart: always
    container_name: database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=rails_development
      - POSTGRES_USER=rubiti
      - POSTGRES_PASSWORD=shark_32j
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports: 
      - "81:81"
    volumes:
      - web-root:/usr/share/nginx/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - app
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/usr/share/nginx/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/usr/share/nginx/html --email brandao@rubiti.com --agree-tos --no-eff-email --staging -d andersonbrandao.dev -d www.andersonbrandao.dev

volumes:
  gem_cache:
  db_data:
  node_modules:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/brandao/andersonbrandao.dev/public
      o: bind

networks:
  app-network:
    driver: bridge